{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","id","className","alt","src","type","class","placeholder","aria-label","aria-describedby","autoPlay","playsInline","muted","loop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4NA4EeA,MAxEf,WACE,OACE,yBAAKC,GAAG,gBAAgBC,UAAU,mBAChC,yBAAKD,GAAG,0BACN,yBAAKA,GAAG,0BACN,yBAAKC,UAAU,oDAQb,yBAAKD,GAAG,cAAcE,IAAI,iBAAiBC,IAAI,4DAC/C,4BAAQH,GAAG,gBAAgBC,UAAU,iBAArC,YAIF,yBAAKA,UAAU,uBAEb,wBAAIA,UAAU,kCAAd,yBAAqE,6BAArE,yBACA,wBAAIA,UAAU,gCAAd,mCACA,yBAAKA,UAAU,uCACb,2BAAOD,GAAG,cAAcI,KAAK,OAAOC,MAAM,eAAeC,YAAY,gBAAgBC,aAAW,gBAAgBC,mBAAiB,iBACjI,yBAAKP,UAAU,4CACb,4BAAQD,GAAG,gBAAgBC,UAAU,4BAA4BG,KAAK,UAAtE,cAA0F,uBAAGJ,GAAG,uBAAuBC,UAAU,0CAGrI,wBAAIA,UAAU,sCAAd,yEAIN,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,0DACb,6BACE,wBAAIA,UAAU,8BAAd,qBACA,wBAAIA,UAAU,4BAAd,8FAIN,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,2DACb,6BACE,yBAAKA,UAAU,WAAWE,IAAI,iFAAiFD,IAAI,aACnH,yBAAKD,UAAU,0BACb,2BAAOA,UAAU,eAAeQ,UAAQ,EAACC,aAAW,EAACC,OAAK,EAACC,MAAI,GAC7D,4BAAQT,IAAI,uFAAuFC,KAAK,qBAQtH,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,qDACb,6BACE,wBAAIA,UAAU,8BAAd,qBACA,wBAAIA,UAAU,4BAAd,kGCtDIY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4e39039c.chunk.js","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div id=\"mainContainer\" className=\"container-fluid\">\n      <div id=\"main-header-background\">\n        <div id=\"main-container-padding\">\n          <div className=\"main-container-header d-flex justify-content-end\">\n            {/* <span className=\"nfLogo\">\n              <svg id=\"svg-icon\" viewBox=\"0 0 111 30\" focusable=\"false\">\n                <g id=\"netflix-logo\">\n                  <path className=\"Fill-14\" d=\"M105.06233,14.2806261 L110.999156,30 C109.249227,29.7497422 107.500234,29.4366857 105.718437,29.1554972 L102.374168,20.4686475 L98.9371075,28.4375293 C97.2499766,28.1563408 95.5928391,28.061674 93.9057081,27.8432843 L99.9372012,14.0931671 L94.4680851,-5.68434189e-14 L99.5313525,-5.68434189e-14 L102.593495,7.87421502 L105.874965,-5.68434189e-14 L110.999156,-5.68434189e-14 L105.06233,14.2806261 Z M90.4686475,-5.68434189e-14 L85.8749649,-5.68434189e-14 L85.8749649,27.2499766 C87.3746368,27.3437061 88.9371075,27.4055675 90.4686475,27.5930265 L90.4686475,-5.68434189e-14 Z M81.9055207,26.93692 C77.7186241,26.6557316 73.5307901,26.4064111 69.250164,26.3117443 L69.250164,-5.68434189e-14 L73.9366389,-5.68434189e-14 L73.9366389,21.8745899 C76.6248008,21.9373887 79.3120255,22.1557784 81.9055207,22.2804387 L81.9055207,26.93692 Z M64.2496954,10.6561065 L64.2496954,15.3435186 L57.8442216,15.3435186 L57.8442216,25.9996251 L53.2186709,25.9996251 L53.2186709,-5.68434189e-14 L66.3436123,-5.68434189e-14 L66.3436123,4.68741213 L57.8442216,4.68741213 L57.8442216,10.6561065 L64.2496954,10.6561065 Z M45.3435186,4.68741213 L45.3435186,26.2498828 C43.7810479,26.2498828 42.1876465,26.2498828 40.6561065,26.3117443 L40.6561065,4.68741213 L35.8121661,4.68741213 L35.8121661,-5.68434189e-14 L50.2183897,-5.68434189e-14 L50.2183897,4.68741213 L45.3435186,4.68741213 Z M30.749836,15.5928391 C28.687787,15.5928391 26.2498828,15.5928391 24.4999531,15.6875059 L24.4999531,22.6562939 C27.2499766,22.4678976 30,22.2495079 32.7809542,22.1557784 L32.7809542,26.6557316 L19.812541,27.6876933 L19.812541,-5.68434189e-14 L32.7809542,-5.68434189e-14 L32.7809542,4.68741213 L24.4999531,4.68741213 L24.4999531,10.9991564 C26.3126816,10.9991564 29.0936358,10.9054269 30.749836,10.9054269 L30.749836,15.5928391 Z M4.78114163,12.9684132 L4.78114163,29.3429562 C3.09401069,29.5313525 1.59340144,29.7497422 0,30 L0,-5.68434189e-14 L4.4690224,-5.68434189e-14 L10.562377,17.0315868 L10.562377,-5.68434189e-14 L15.2497891,-5.68434189e-14 L15.2497891,28.061674 C13.5935889,28.3437998 11.906458,28.4375293 10.1246602,28.6868498 L4.78114163,12.9684132 Z\"></path>\n                </g>\n              </svg>\n            </span> */}\n            <img id=\"netflixLogo\" alt=\"netflix banner\" src=\"https://www.freepnglogos.com/uploads/netflix-logo-0.png\" />\n            <button id=\"signin-button\" className=\"nfButtonStyle\">\n              Sign In\n            </button>\n          </div>\n          <div className=\"main-container-body\">\n            {/* <h1 className=\"header-title-style text-center\">Unlimited movies, TV <br /> shows, and more.</h1> */}\n            <h1 className=\"header-title-style text-center\">Josh's Version of the <br /> Netflix Landing Page</h1>\n            <h2 className=\"header-sub-style text-center\">Watch anywhere. Cancel anytime.</h2>\n            <div className=\"input-group mb-3 custom-input-group\">\n              <input id=\"email-input\" type=\"text\" class=\"form-control\" placeholder=\"Email address\" aria-label=\"Email address\" aria-describedby=\"basic-addon2\" />\n              <div className=\"input-group-append group-input-container\">\n                <button id=\"try-it-button\" className=\"btn btn-outline-secondary\" type=\"button\">TRY IT NOW <i id=\"custom-chevron-arrow\" className=\"align-middle fas fa-chevron-right \"></i></button>\n              </div>\n            </div>\n            <h3 className=\"header-sub-small-style text-center\">Ready to watch? Enter your email to create or access your account.</h3>\n          </div>\n        </div>\n      </div>\n      <div className=\"main-body-container\">\n        <div className=\"row custom-body-row\">\n          <div className=\"col-sm-6 col-md-6 col-lg-6 d-flex justify-content-end\">\n            <div className=\"main-sub-body-left-container d-flex align-items-center\">\n              <div>\n                <h1 className=\"body-title-style text-left\">Enjoy on your TV.</h1>\n                <h2 className=\"body-sub-style text-left\">Watch on Smart TVs, Playstation, Xbox, Chromecast, Apple TV, Blu-ray players, and more.</h2>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-6 col-md-6 col-lg-6\">\n            <div className=\"main-sub-body-right-container d-flex align-items-center\">\n              <div>\n                <img className=\"tv-stand\" src=\"https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/tv.png\" alt=\"TV Stand\"/>\n                <div className=\"tv-animation-container\">\n                  <video className=\"tv-animation\" autoPlay playsInline muted loop>\n                    <source src=\"https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/video-tv.m4v\" type=\"video/mp4\"></source>\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"main-body-container\">\n        <div className=\"row custom-body-row\">\n          <div className=\"col-sm-6 col-md-6 col-lg-6 d-flex justify-content-end\">\n            <div className=\"main-sub-body-container d-flex align-items-center\">\n              <div>\n                <h1 className=\"body-title-style text-left\">Enjoy on your TV.</h1>\n                <h2 className=\"body-sub-style text-left\">Watch on Smart TVs, Playstation, Xbox, Chromecast, Apple TV, Blu-ray players, and more.</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}